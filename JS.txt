[ 자바스크립트 ]
    HTML  : 하이퍼텍스트 마크업 언어      : 웹문서 프레임
    CSS   : 캐스케이드 스타일 시트 언어   : 웹문서 디자인
    JS    : 자바 스크립트                 : 웹문서 동적 *프로그래밍
           -HTML 안에 CSS와 JS 포함
    1. 사용처 : 웹프로그래밍, 서버 개발, 소프트웨어 개발(C언어가 더 많이 사용됨)
    2. 라이브러리 종류
        1) REACT(가장 많음), ANGULAR(서비스 종료), VUE, JQUERY
        2) NODE.JS : 2009년 이후 백엔드 역할  
        3) REACT NATIVE : 앱( 지원중단 )
        4) REACT NATIVE WEB : 웹+앱 
        ---> REACT.JS + NEXT.JS + SPRING (트렌디 프론트엔드 스택)
        5) NW.JS : 소프트웨어 ( 거의 안 씀 )
    3. 사용법
       ※ 하나의 HTML에 여러개 스크립트 사용 가능
        바디 끝나는 지점 앞에 스크립트 삽입 <script> </script>
        <script src="외부스크립트파일경로"></script>
        - 주의할점 : HTML 없이 JS 파일만으로 실행 불가능.
        (방법1) : 
            1. HTML 파일 내 <body> 마크업 안에서 가장 아래
            2. <script> 마크업을 이용하여 JS코드를 작성한다.
        *(방법2)* :
            1. JS 파일 생성하여 JS코드를 작성한다.
            2. HTML 파일 내 <body> 마크업 안에서 가장 아래
            3. <script src="JS파일경로"></script>
    4. 주석
        - HTML  : <!-- 주석내용 -->
        - CSS   : /* 주석내용 */
        - JS    : 
            1. /* 여러줄 주석내용 */ 
            2. // 한줄 주석내용

[ JS 실행 확인 ]
    - 브라우저(크롬)에서 F12 (개발자도구)
        -> source 탭에서 .js 파일 여부 확인
        -> console 탭에서 .js 출력 메시지 확인

[ 기본 필수 용어 ]
    1. 데이터 ( Data / 자료 ) : 사실이나 값을 그대로 나타낸 객관적 자료
        -> 예] (사람) 나이, 키, 시력, 이름 등 (제품) 가격, 제품명 등

    2. *리터럴( Literal ) : 프로그래밍 언어(JS/JAVA/PY/C)에서 소스코드(작성한 코드)에 직접 표현한 값
        -> 컴퓨터는 이진법을 쓰기에, 프로그래밍언어 회사들은 0과 1로 조합한 미리 만들어진 단어가 필요하다.
        -> JS는 'a'를 모르기에 개발자가 사용할 수 있도록 정해진 값을 넣어주는 것.( 상수 = 수정 불가한 고정값 )
        -> 종류 : 9(숫자), a(문자), true(참) < 자료의 타입/종류 >

    3. 자료형 : 프로그래밍언어에서 자료들을 분류하는 방법
        -> 왜? 데이터를 처리하는데 효율적으로 하기 위함 : <분리수거>
        -> 각 프로그래밍언어 별로 다르다.

[ JS 자료형 ]
    1. 숫자형( Number )         : 10(정수), 3.14 (실수)
    2. 문자열 ( String )        : "" 또는 ''로 감싼 자료 / 사과 vs "사과"
    3. 불리언 ( Boolean )       : true 또는 false *소문자만 가능
    4. 배열 ( Array )           : [ 자료, 자료, 자료 ] 대괄호 안에 여러 자료들을 감싼 자료 
    5. 객체 ( Object )          : { }
    6. 특수 : undefined, null   : 





